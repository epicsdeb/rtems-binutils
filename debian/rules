#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

#eg. DEB_BUILD_OPTIONS=parallel=8

ifeq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
CFLAGS:=$(filter-out -g,$(CFLAGS))
endif

RTEMS_VER =4.9

ifneq (,$(filter target=%,$(DEB_BUILD_OPTIONS)))
TARGETS = $(patsubst target=%,%,$(filter target=%,$(DEB_BUILD_OPTIONS)))
else
TARGETS = i386 arm powerpc m68k
endif

prefix=/usr
exec_prefix=$(prefix)
bindir=$(exec_prefix)/bin
datarootdir=$(prefix)/share
datadir=$(datarootdir)
mandir=$(datarootdir)/man
infodir=$(datarootdir)/info
localedir=$(datarootdir)/locale
libexecdir=$(exec_prefix)/libexec
libdir=$(exec_prefix)/lib


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

override_dh_auto_clean:
	rm -rf build-*
	rm -f config.sub config.guess
	rm -f debian/binutils-*-rtems$(RTEMS_VER).install

override_dh_auto_test:

override_dh_auto_configure: config.sub config.guess $(TARGETS:%=x_configure_%)

config.%: /usr/share/misc/config.%
	cp -f $< $@

x_configure_%:
	dh_auto_configure -B$$PWD/build-$* -- \
 --target $*-rtems$(RTEMS_VER) --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE) \
 --prefix=$(prefix) --datadir=$(datadir) --libexecdir=$(libexecdir) --infodir=$(infodir) \
 --disable-nls --disable-werror --with-system-zlib --without-included-gettext \
 CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"

override_dh_auto_build: # no-op see below

override_dh_auto_install: $(TARGETS:%=x_install_%)
	rm -f debian/tmp/$(libdir)/libiberty*
	rm -rf debian/tmp$(infodir)

x_install_%:
	# abuse the install action to do the build as well
	# this means the build host only needs space
	# to build a single target.
	dh_auto_build -B$$PWD/build-$*
	dh_auto_install -B$$PWD/build-$*
	dh_auto_clean -B$$PWD/build-$*

override_dh_install: $(TARGETS:%=debian/binutils-%-rtems$(RTEMS_VER).install)
	dh_install --fail-missing

debian/binutils-%-rtems$(RTEMS_VER).install: debian/binutils.install.in
	sed -e 's|@prefix@|$(prefix)|g' -e 's|@version@|$(RTEMS_VER)|g' -e 's|@arch@|$*|g' debian/binutils.install.in > $@

%:
	dh --parallel $@

# this rule is *not* part of a normal build.
# invoke it manually ("make -f debian/rules debian/control")
# to re-generate the control file after changing the TARGETS list
debian/control: debian/rules debian/control.prefix.in debian/control.arch.in debian/rules
	sed -e 's|@version@|$(RTEMS_VER)|g' debian/control.prefix.in > $@
	for arch in $(TARGETS); do sed -e 's|@version@|$(RTEMS_VER)|g' -e "s|@arch@|$$arch|g" debian/control.arch.in >> $@; done
